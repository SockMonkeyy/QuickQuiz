[
    {
        "question": "Inside which HTML element do we put the JavaScript??",
        "choice1": "<script>",
        "choice2": "<javascript>",
        "choice3": "<js>",
        "choice4": "<scripting>",
        "answer": 1
    },
    {
        "question": "What is the correct syntax for referring to an external script called 'xxx.js'?",
        "choice1": "<script href='xxx.js'>",
        "choice2": "<script name='xxx.js'>",
        "choice3": "<script src='xxx.js'>",
        "choice4": "<script file='xxx.js'>",
        "answer": 3
    },
    {
        "question": " How do you write 'Hello World' in an alert box?",
        "choice1": "msgBox('Hello World');",
        "choice2": "alertBox('Hello World');",
        "choice3": "msg('Hello World');",
        "choice4": "alert('Hello World');",
        "answer": 4
    },
    {
        "question": "What is the correct JavaScript syntax to change the content of the HTML element below? <p id=\"demo\">This is a demonstration.</p>",
        "choice1": "document.getElementById(\"demo\").innerHTML = \"Hello World!\";",
        "choice2": "document.getElementById(\"demo\").innerHTML = \"Hello World!\";",
        "choice3": "document.getElementByName(\"p\").innerHTML = \"Hello World!\";",
        "choice4": "document.getElement(\"p\").innerHTML = \"Hello World!\";",
        "answer": 2
    },
    {
        "question": "Where is the correct place to insert a JavaScript?",
        "choice1": "Both the <head> section and the <body> section are correct",
        "choice2": "The <body> section",
        "choice3": "The <head> section",
        "choice4": "None of the Above",
        "answer": 1
    },
    {
        "question": "How do you create a function in JavaScript?",
        "choice1": "function = myFunction()",
        "choice2": "function:myFunction()",
        "choice3": "function myFunction()",
        "choice4": "function.myFunction()",
        "answer": 3
    },
    {
        "question": "How do you call a function named \"myFunction\"?",
        "choice1": "call myFunction()",
        "choice2": "call function myFunction()",
        "choice3": "function myFunction()",
        "choice4": "myFunction() ",
        "answer": 4
    },
    {
        "question": "How to write an IF statement in JavaScript?",
        "choice1": "if i == 5 then",
        "choice2": "if (i == 5)",
        "choice3": "if i = 5",
        "choice4": "if i = 5 then",
        "answer": 2
    },
    {
        "question": "How to write an IF statement for executing some code if \"i\" is NOT equal to 5?",
        "choice1": "if i <> 5",
        "choice2": "if (i <> 5)",
        "choice3": "if (i != 5)",
        "choice4": "if i =! 5 then",
        "answer": 3
    },
    {
        "question": "How does a WHILE loop start?",
        "choice1": "while (i <= 10; i++)",
        "choice2": "while i = 1 to 10",
        "choice3": "while (i <= 10)",
        "choice4": "while i == 10",
        "answer": 3
    },
    {
        "question": "How does a FOR loop start?",
        "choice1": "for (i = 0; i <= 5; i++)",
        "choice2": "for (i <= 5; i++)",
        "choice3": "for (i = 0; i <= 5)",
        "choice4": "for i = 1 to 5",
        "answer": 1
    },
    {
        "question": "How can you add a comment in a JavaScript?",
        "choice1": "//This is a comment",
        "choice2": "<!--This is a comment-->",
        "choice3": "'This is a comment",
        "choice4": "//**This is a comment",
        "answer": 1
    },
    {
        "question": "How to insert a comment that has more than one line?",
        "choice1": "/*This comment has more than one line*/",
        "choice2": "//This comment has more than one line//",
        "choice3": "<!--This comment has more than one line-->",
        "choice4": "//**This comment has more than one line",
        "answer": 1
    },
    {
        "question": "What is the correct way to write a JavaScript array?",
        "choice1": "var colors = [\"red\", \"green\", \"blue\"]",
        "choice2": "var colors = (1:\"red\", 2:\"green\", 3:\"blue\")",
        "choice3": "var colors = \"red\", \"green\", \"blue\"",
        "choice4": "var colors = 1 = (\"red\"), 2 = (\"green\"), 3 = (\"blue\")",
        "answer": 1
    },
    {
        "question": "How do you round the number 7.25, to the nearest integer?",
        "choice1": "Math.round(7.25)",
        "choice2": "Math.rnd(7.25)",
        "choice3": "rnd(7.25)",
        "choice4": "round(7.25)",
        "answer": 1
    },
    {
        "question": "How do you find the number with the highest value of x and y?",
        "choice1": "Math.ceil(x, y)",
        "choice2": "top(x, y)",
        "choice3": "Math.max(x, y)",
        "choice4": "ceil(x, y)",
        "answer": 3
    },
    {
        "question": "What is the correct JavaScript syntax for opening a new window called \"w2\" ?",
        "choice1": "w2.window.open(\"http://www.w3schools.com\");",
        "choice2": "w2 = window.open(\"http://www.w3schools.com\");",
        "choice3": "w2 = window.new(\"http://www.w3schools.com\");",
        "choice4": "w2.windowOpen(\"http://www.w3schools.com\");",
        "answer": 2
    },
    {
        "question": "How can you detect the client's browser name?",
        "choice1": "browser.name",
        "choice2": "client.navName",
        "choice3": "navigator.appName",
        "choice4": "browser.detect",
        "answer": 3
    },
    {
        "question": "Which event occurs when the user clicks on an HTML element?",
        "choice1": "onchange",
        "choice2": "onclick",
        "choice3": "onmouseclick",
        "choice4": "onmouseover",
        "answer": 2
    },
    {
        "question": "How do you declare a JavaScript variable?",
        "choice1": "var carName;",
        "choice2": "v carName;",
        "choice3": "variable carName;",
        "choice4": "var: carName",
        "answer": 1
    },
    {
        "question": "Which operator is used to assign a value to a variable?",
        "choice1": "X;",
        "choice2": "*;",
        "choice3": "=;",
        "choice4": "-",
        "answer": 3
    },
    {
        "question": "What will the following code return: Boolean(10 > 9)",
        "choice1": "true",
        "choice2": "false",
        "choice3": "NaN",
        "choice4": "Null",
        "answer": 3
    },
    {
        "question": "Is JavaScript case-sensitive?",
        "choice1": "No",
        "choice2": "Yes",
        "choice3": "Only when declaring a variable",
        "choice4": "Camel case must be used",
        "answer": 2
    },
    {
        "question": "Which is the purpose of JavaScript?",
        "choice1": "To style HTML Pages",
        "choice2": "To add interactivity to HTML pages",
        "choice3": "To perform server side scripting operations",
        "choice4": "To enable animation and api operations",
        "answer": 2
    },
    {
        "question": "What's the output? function sayHi() {\n  console.log(name);\n  console.log(age);\n  var name = 'Lydia';\n  let age = 21;\n}\n\nsayHi();",
        "choice1": "`undefined` and `ReferenceError`",
        "choice2": "`Lydia` and `undefined`",
        "choice3": "`Lydia` and `ReferenceError`",
        "choice4": "`ReferenceError` and `21`",
        "answer": 1
    },
    {
        "question": " What's the output? for (var i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 1);\n}\n\nfor (let i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 1);\n}",
        "choice1": "`0 1 2` and `0 1 2`",
        "choice2": "`0 1 2` and `3 3 3`",
        "choice3": "`3 3 3` and `0 1 2`",
        "choice4": "`0 1 3` and `0 1 3`",
        "answer": 3
    },
    {
        "question": " What's the output? const shape = {\n  radius: 10,\n  diameter() {\n    return this.radius * 2;\n  },\n  perimeter: () => 2 * Math.PI * this.radius,\n};\n\nconsole.log(shape.diameter());\nconsole.log(shape.perimeter());",
        "choice1": "`NaN` and `63`",
        "choice2": "`20` and `62.83185307179586`",
        "choice3": "`20` and `NaN`",
        "choice4": "`20` and `63`",
        "answer": 2
    },
    {
        "question": " What's the output? +true;\n!'Lydia';",
        "choice1": "`1` and `false`",
        "choice2": "`false` and `NaN`",
        "choice3": "`false` and `false`",
        "choice4": "`null` and `false`",
        "answer": 1
    },
    {
        "question": " Which one is true? const bird = {\n  size: 'small',\n};\n\nconst mouse = {\n  name: 'Mickey',\n  small: true,\n};",
        "choice1": "All of them are valid",
        "choice2": "`mouse.bird.size` is not valid",
        "choice3": "`mouse[bird.size]` is not valid",
        "choice4": "`mouse[bird[\"size\"]]` is not valid",
        "answer": 1
    },
    {
        "question": "What's the output? let c = { greeting: 'Hey!' };\nlet d;\n\nd = c;\nc.greeting = 'Hello';\nconsole.log(d.greeting);",
        "choice1": "`ReferenceError`",
        "choice2": "`Hello`",
        "choice3": "`Hey!`",
        "choice4": "`undefined`",
        "answer": 1
    },
    {
        "question": "What's the output? let a = 3;\nlet b = new Number(3);\nlet c = 3;\n\nconsole.log(a == b);\nconsole.log(a === b);\nconsole.log(b === c);",
        "choice1": "`false` `true` `true`",
        "choice2": "`true` `false` `true`",
        "choice3": "`false` `false` `true`",
        "choice4": "`true` `false` `false`",
        "answer": 3
    },
    {
        "question": "What's the output? class Chameleon {\n  static colorChange(newColor) {\n    this.newColor = newColor;\n    return this.newColor;\n  }\n\n  constructor({ newColor = 'green' } = {}) {\n    this.newColor = newColor;\n  }\n}\n\nconst freddie = new Chameleon({ newColor: 'purple' });\nconsole.log(freddie.colorChange('orange'));",
        "choice1": "`TypeError`",
        "choice2": "`orange`",
        "choice3": "`purple`",
        "choice4": "`green`",
        "answer": 4
    },
   
    {
        "question": "What's the output? let greeting;\ngreetign = {}; // Typo!\nconsole.log(greetign);",
        "choice1": "`{}`",
        "choice2": "`ReferenceError: greetign is not defined`",
        "choice3": "`undefined`",
        "choice4": "`null` and `false`",
        "answer": 1
    },
   
    {
        "question": "What happens when we do this? function bark() {\n  console.log('Woof!');\n}\n\nbark.animal = 'dog';",
        "choice1": "`ReferenceError`",
        "choice2": "Nothing, this is totally fine!",
        "choice3": "`SyntaxError`. You cannot add properties to a function this way.",
        "choice4": "`\"Woof\"` gets logged.",
        "answer": 1
    },
    {
        "question": "What's the output? function Person(firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n}\n\nconst member = new Person('Lydia', 'Hallie');\nPerson.getFullName = function() {\n  return `${this.firstName} ${this.lastName}`;\n};\n\nconsole.log(member.getFullName());",
        "choice1": "`undefined` `undefined`",
        "choice2": "`TypeError`",
        "choice3": "`SyntaxError`",
        "choice4": "`Lydia Hallie`",
        "answer": 1
    },
    {
        "question": "What's the output? function Person(firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n}\n\nconst lydia = new Person('Lydia', 'Hallie');\nconst sarah = Person('Sarah', 'Smith');\n\nconsole.log(lydia);\nconsole.log(sarah);s",
        "choice1": "Capturing > Target > Bubbling",
        "choice2": "Target > Capturing > Bubbling",
        "choice3": "Bubbling > Target > Capturing",
        "choice4": "Target > Bubbling > Capturing",
        "answer": 4
    },
    {
        "question": "All object have prototypes. `null`",
        "choice1": "true",
        "choice2": "false",
        "choice3": "`undefined`",
        "choice4": "`null` and `false`",
        "answer": 2
    },
    {
        "question": "What is the OutPut? function sum(a, b) {\n  return a + b;\n}\n\nsum(1, '2');",
        "choice1": "`3`",
        "choice2": "`NaN`",
        "choice3": "`TypeError`",
        "choice4": "`\"12\"`",
        "answer": 3
    },
    {
        "question": "What is the OutPut? let number = 0;\nconsole.log(number++);\nconsole.log(++number);\nconsole.log(number);",
        "choice1": "`0` `1` `2`",
        "choice2": "`1` `1` `2`",
        "choice3": "`1` `2` `2`",
        "choice4": "`0` `2` `2`",
        "answer": 3
    },
    {
        "question": "What is the OutPut? function getPersonInfo(one, two, three) {\n  console.log(one);\n  console.log(two);\n  console.log(three);\n}\n\nconst person = 'Lydia';\nconst age = 21;\n\ngetPersonInfo`${person} is ${age} years old`;",
        "choice1": "`\"Lydia\"` `21` `[\"\", \" is \", \" years old\"]`",
        "choice2": "`[\"\", \" is \", \" years old\"]` `\"Lydia\"` `21`",
        "choice3": "`\"Lydia\"` `[\"\", \" is \", \" years old\"]` `21`",
        "choice4": "`[\"Lydia\", \" is \", \" years old\"]` `21`",
        "answer": 2,
        "answerExplanation": "If you use tagged template literals, the value of the first argument is always an array of the string values. The remaining arguments get the values of the passed expressions!"
    }
]